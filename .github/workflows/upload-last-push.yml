name: Latest master - Compile and push to dropbox

on: 
  push:
    branches:
      - master

jobs:
  ubuntu:
    runs-on: ubuntu-latest
    container:
      image: oberbichler/kratos-dev:latest
      env:
        CCACHE_SLOPPINESS: pch_defines,time_macros
        CCACHE_COMPILERCHECK: content
        CCACHE_COMPRESS: true
        CCACHE_NODISABLE: true
        CCACHE_MAXSIZE: 500M
        FC: gfortran-7
        CC: /usr/lib/ccache/gcc
        CXX: /usr/lib/ccache/g++
    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Cache Build
        id: cache-build
        uses: actions/cache@v1
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache-${{ github.sha }}
          restore-keys: ${{ runner.os }}-ccache-
      
      - name: Build
        run: |
          cp .github/workflows/upload-last-push/linux/configure.sh configure.sh
          bash configure.sh
          ccache -s

      - name: Package generate 
        run: |
          mkdir /zip 
          cp .github/workflows/upload-last-push/linux/runkratos.py /zip/runkratos.py
          cp .github/workflows/upload-last-push/linux/zipper.sh /zip/zipper.sh
          bash /zip/zipper.sh
          tar -zcvf /zip/latest-linux-x64.tgz /zip/dist/runkratos
          ccache -s

      - name: Upload zip to dropbox
        env: 
          DROPBOX_PUSH_KEY: ${{ secrets.DROPBOX_PUSH_KEY }}
        run: |
          cp .github/workflows/upload-last-push/package.json package.json
          npm install 
          cp .github/workflows/upload-last-push/pusher-dropbox.js pusher-dropbox.js
          node pusher-dropbox.js
  # windows:
  #   runs-on: windows-latest

  #   steps:
  #   - uses: actions/checkout@v2-beta
  #   - uses: actions/setup-python@v1
  #     with:
  #       python-version: '3.6'
  #   - name: Cache Build
  #     id: cache-build
  #     uses: actions/cache@v1
  #     with:
  #       path: build
  #       key: ${{ runner.os }}-build-${{ github.sha }}
  #       restore-keys: ${{ runner.os }}-build-
  #   - name: Build
  #     shell: cmd
  #     run: |
  #       curl -s -O https://web.cimne.upc.edu/users/fjgarate/kratoslibs/libblas.lib
  #       curl -s -O https://web.cimne.upc.edu/users/fjgarate/kratoslibs/liblapack.lib
  #       curl -s -O https://web.cimne.upc.edu/users/fjgarate/kratoslibs/superlu.lib
        
  #       call "%ProgramFiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64 || goto :error
        
  #       set CC=cl.exe
  #       set CXX=cl.exe

  #       set KRATOS_BUILD_TYPE=Release
  #       set KRATOS_SOURCE=%cd%
  #       set KRATOS_BUILD=%cd%\build
  #       set KRATOS_APP_DIR=applications

  #       set KRATOS_APPLICATIONS=
  #       set KRATOS_APPLICATIONS=%KRATOS_APPLICATIONS%%KRATOS_APP_DIR%\FluidDynamicsApplication;

  #       del /F /Q "%KRATOS_BUILD%\%KRATOS_BUILD_TYPE%\cmake_install.cmake"
  #       del /F /Q "%KRATOS_BUILD%\%KRATOS_BUILD_TYPE%\CMakeCache.txt"
  #       del /F /Q "%KRATOS_BUILD%\%KRATOS_BUILD_TYPE%\CMakeFiles"

  #       cmake                                                ^
  #         -G"Visual Studio 16 2019"                          ^
  #         -H"%KRATOS_SOURCE%"                                ^
  #         -B"%KRATOS_BUILD%\%KRATOS_BUILD_TYPE%"             ^
  #         -DBOOST_ROOT="%BOOST_ROOT%"                        ^
  #         -DLAPACK_LIBRARIES="%KRATOS_SOURCE%\liblapack.lib"                            ^
  #         -DBLAS_LIBRARIES="%KRATOS_SOURCE%\libblas.lib"                            ^
  #         -DINCLUDE_FEAST=OFF                                ^
  #         -DINSTALL_RUNKRATOS=ON                            ^
  #         -DUSE_COTIRE=ON                                    || goto :error

  #       cmake --build "%KRATOS_BUILD%\%KRATOS_BUILD_TYPE%" --target all_unity -- /property:configuration=%KRATOS_BUILD_TYPE% /p:Platform=x64 || goto :error

  #       goto :EOF
  #       :error
  #       echo Failed with error #%errorlevel%.
  #       exit /b %errorlevel%
        
  #   - name: Package generate 
  #     shell: powershell
  #     run: |
  #       $compress = @{
  #       Path= 'D:/a/Kratos/Kratos/bin/Release/*'
  #       CompressionLevel = 'Fastest'
  #       DestinationPath = 'D:\a\latest-windows-x64.zip'
  #       }
  #       Compress-Archive @compress

  #   - name: Upload zip to dropbox
  #     env: 
  #       DROPBOX_PUSH_KEY: ${{ secrets.DROPBOX_PUSH_KEY }}
  #     run: |
  #       cp .github/workflows/upload-last-push/package.json package.json
  #       npm install 
  #       cp .github/workflows/upload-last-push/pusher-dropbox.js pusher-dropbox.js
  #       node pusher-dropbox.js
        